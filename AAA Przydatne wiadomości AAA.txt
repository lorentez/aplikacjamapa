Tutaj umieszczał i aktualizował będę ciekawe informacja, na które udało mi się natrafić. Proszę o zapoznanie się z nimi.

W naszym projekcie będziemy musieli spojrzeć na mapę, jak na graf, który składa się z węzłów i krawędzi, gdzie każda z nich ma swoja wagę, w naszym przypadku długość. Każde skrzyżowanie dwóch, lub więcej krawędzi(dróg), będzie węzłem. Po "wyprostowaniu" ulic i skrzyżowań będziemy mieli gotowy graf na którym mogą pracować podane w innych plikach algprytmy.

Problem komiwojażera:
https://pl.wikipedia.org/wiki/Problem_komiwoja%C5%BCera
http://www.mini.pw.edu.pl/MiNIwyklady/grafy/prob-komiw.html //tutaj dodaję link z nieco lepszym opisem problemu

Może to być przydatne przy takich funkcjonalnościach naszego programu, jak szukanie trasy dojazdu przez jeden, lub kilka punktów pośrednich. Opisuje on, jak najszybciej/najtaniej dostać się z miejsca do miejsca odwiedzając zadane miasta, zaczynając i kończąc w danym miejscu. Czyli idealnie to, czego potrzebujemy.

Problem marszrutyzacji:
https://pl.wikipedia.org/wiki/Problem_marszrutyzacji
Podobnie jak wyżej.

Raczej mało przydatny do naszych zastosować, aczkolwiek może się przydać. Jak dostać się z A do B "zahaczając" po drodze WSZYSTKIE punkty:
https://www.quora.com/What-algorithm-could-I-use-to-determine-the-shortest-path-between-selected-points-on-a-map-if-all-points-need-to-be-visited

Od razu coś w C++:
http://stackoverflow.com/questions/3447566/dijkstras-algorithm-in-c

SPFA - Shortest Path Faster Algorithm:
https://www.quora.com/What-is-the-estimated-complexity-of-SPFA-Shortest-Path-Faster-Algorithm#

Algorytm Johnsona:
https://www.quora.com/How-does-Johnsons-algorithm-shortest-path-in-a-graph-with-negative-weights-and-cycles-work

Shortest Path in Directed Acyclic Graph:
https://www.quora.com/What-is-the-reason-why-the-algorithm-for-computing-shortest-paths-on-DAGs-is-correct-aka-DAG-SP-DAG-shortest-Paths

I jeszcze trochę więcej DAG:
http://www.geeksforgeeks.org/shortest-path-for-directed-acyclic-graphs/

Ułatwiające zrozumienie problemu opisy:
https://pl.wikipedia.org/wiki/Problem_najkr%C3%B3tszej_%C5%9Bcie%C5%BCki

https://en.wikipedia.org/wiki/Shortest_Path_Faster_Algorithm


